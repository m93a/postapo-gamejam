<!doctype html>
<meta charset=utf-8>
<title>Postapo</title>
<style>

#col{
float:right;
width:max-content;
width:moz-max-content;
width:webkit-max-content;
}
table{
max-width:100%;
overflow:scroll;
}
td,div{
position:relative;
border:5px solid gray;
font-size:3rem;
color: #ccc;
width:64px;
height:64px;
line-height:64px;
text-align:center;
cursor:default;
user-select:none;
-ms-user-select:none;
-moz-user-select:none;
-webkit-user-select:none;
}
span{
font-size:.8rem;
font-family:sans-serif;
font-weight:bold;
position:absolute;
top:0;left:0;
background:white;
border-radius:50%;
width:16px;
height:16px;
line-height:16px;
}
span:empty{display:none;}
div,p{
float:right;
clear:right;
}
p{
top:100px;
border:1px solid;
}
h3{
margin:0;
}

.active{outline:1px solid yellow;}
.hidden{display:none;}

.p1{color:blue;}
.p2{color:green;}

[x='0']{background:black;}
[x='1']{background:yellow;}
[x='2']{background:red;}
[x0='0']{border-top-color:black;}
[x0='1']{border-top-color:yellow;}
[x0='2']{border-top-color:red;}
[x1='0']{border-right-color:black;}
[x1='1']{border-right-color:yellow;}
[x1='2']{border-right-color:red;}
[x2='0']{border-bottom-color:black;}
[x2='1']{border-bottom-color:yellow;}
[x2='2']{border-bottom-color:red;}
[x3='0']{border-left-color:black;}
[x3='1']{border-left-color:yellow;}
[x3='2']{border-left-color:red;}

</style>
<br>
<script>

var a, /* world object,
Table element extended by { ...-1: trElem,
0: trElem, 1: trElem... }, where trElem are
<tr> elements extended by { ...-1: tdElem,
0: tdElem, 1: tdElem... }, where tdElem are
<td> elements extended by the corresponding
item of the tile stack and {p: spanElem }
which shows no. of people on the tile */

b=document.body,

c={n:0}, /* active tile,
Random tile from the tile stack, extended
by {n: int}, where int is the index of the tile */

d={a:0,b:0,m:0,n:0,p:1,s:0}, /* game data
a – step counter, no. of t() calls
b – building mode 0=none,1=mine,2=plant,3=destroy
m – mode 0=place tile, 1=wait, 2=move, 3=build
n – number of people to move
p – which player's turn it is
s – "stage" or "phase" of the game,
    0=init, 1=rise, 2=stall, 3=fall */

e=[], /* array of buildings
contains objects {t,p,d,x,y}
t – type of building
p – no. of player that owns it
d – durability, decreases by time
x,y – coordinates */

f, //coords of ref. point

g=window,
h,i,j,k, //iterators
l=console.log.bind(console),
m=(x)=>x*Math.random()|0, //random int from 0 to x
n=(a,i)=>a.splice(i,1)[0], //pop i-th element from array a

o, /* click listener,
Listener for the click event of td elements */

p=e=>e.preventDefault()+r()&&false, //right-click listener

q=(v,i)=>(n(e,i),a[v.x][v.y].childNodes[1].remove(),a[v.x][v.y].cn=""), //destroy a building

r=()=>([c[0],c[1],c[2],c[3]]=[c[3],c[0],c[1],c[2]],aa.u()),
/* rotate tile,
Listener for the click event of the tile hinter,
rotates the active tile */

s=[], /* tile stack,
Contains objects with properties 0 to 3
for tile sides top, right, bottom, left.
Values of those are numbers 0 to 2
corresponding to the three zone types */

t, //next turn

u=undefined,

v,w,
x,y,z, //temp. vars
col, //left&right column
aa, //active tile
bb, //buildings panel
cc, //controls panel
dd, //visible data

btp, rlt,
tp, rt, lt, bt, /* extend the plane,
tp = Add a row to the top,
bt = Add a row to the bottom,
rt = Add a column to the right,
lt = Add a column to the bottom */

ma=Math.abs,
mr=(x,y)=>x+(++y-x)*Math.random()|0,
mn=Number,

E=(x)=>document.createElement(x),
T=(x)=>new Text(x),
I=(x)=>document.getElementById(x);

x=Element.prototype;
x.ac=x.appendChild;
x.bc=function(x){return this.insertBefore(x,this.children[0])};
x.sa=x.setAttribute;
x.ga=x.getAttribute;
y=(w,z)=>Object.defineProperty(x,w,{get:function(){return this[z]},set:function(x){this[z]=x}});
y("cn","className");
y("tc","textContent");

o=function(e){
 var i=-1,x,y=0,
 t=e.target;
 
 if(d.m==1)return;
 
 if(d.m==2){
  if(f&&t.ga("x")&&ma(f.x-t.x)+ma(f.y-t.y)==1){
   x=a[f.x][f.y].p;
   if(!x.tc)return f=0;
   y=x.cn;z=t.p.cn;
   if(y=="p"+d.p&&(!z||z=="p"+d.p)){
    t.p.cn="p"+d.p;
    t.p.tc=mn(t.p.tc)+d.n;
    x.tc=mn(x.tc)-d.n||(x.cn="");
    cc.u(1);
   }
   f=0;
  }else t.p.tc&&t.p.cn=="p"+d.p&&(f={x:t.x,y:t.y});
  return mm.u();
 }else f=0;
 
 if(d.m==3){
  if(d.b==0||t.cn||t.p.cn!="p"+d.p)return;
  x=(v,w)=>((t.cn="p"+d.p),(t.ac(T(v))),g.e.push({t:w,p:d.p,d:mr(2,5),x:t.x,y:t.y}));
  y=dd[d.p];
  d.b==1&&t.ga("x")=="2"&&y.j>2?((y.j-=3),x("M",1)):
  d.b==2&&t.ga("x")=="1"&&y.j>0&&y.f>2?((y.j--),(y.f-=3),x("P",2)):
  d.b==3&&t.ga("x")=="0"?(t.sa("x",2),y.j+=mr(3,5)):
  console.log(d.b,t.ga("x"));
  return dd.u();
 }
 
 if(x=(a[t.x-1]||{})[t.y]){
  if(x){if(x[2]!=u && x[2]!=c[0])return;x[1]!=u?y=1:0;}
 }
 if(x=(a[t.x+1]||{})[t.y]){
  if(x){if(x[0]!=u && x[0]!=c[2])return;x[1]!=u?y=1:0;}
 }
 if(x=a[t.x][t.y-1]){
  if(x){if(x[1]!=u && x[1]!=c[3])return;x[1]!=u?y=1:0;}
 }
 if(x=a[t.x][t.y+1]){
  if(x){if(x[3]!=u && x[3]!=c[1])return;x[1]!=u?y=1:0;}
 }
 if(!y&&!t.prim){return l(4);}
 
 i=-1;
 while(++i<4)
 t.sa("x"+i,c[i]),
 t[i]=c[i];
 t.sa("x",c.z);
 
 a[t.x-1]||tp();
 a[t.x+1]||bt();
 a[t.x][t.y-1]||lt();
 a[t.x][t.y+1]||rt();
 
 (d.s==0)&&(t.p.cn="p"+d.p)&&(t.p.tc=dd[d.p].p);
 
 g.t();
};

btp=function(t){
 var i=0,j,x,mn=0,mx=0;
 if(t){
  while(a[--i]);
  a[i]=E("tr");
  a.bc(a[i]);
 }else{
  while(a[++i]);
  a[i]=E("tr");
  a.ac(a[i]);
 }
 
 while(a[0][++mx]);
 while(a[0][--mn]);
 
 while(mn++<mx-1){
  x=a[i][mn]=E("td");
  x.x=i;x.y=mn;
  a[i].ac(x);
  x.onclick=o;
  x.ac(x.p=E("span"));
 }
};

rlt=function(r){
 var i=0,j,x,mn=0,mx=0;
 
 while(a[++mx]);
 while(a[--mn]);
 
 if(r){
  j=0;while(a[0][++j]);
 }else{
  j=0;while(a[0][--j]);
 }
 
 while(mn++<mx-1){
  x=a[mn][j]=E("td");
  x.x=mn;x.y=j;
  r?a[mn].ac(x):a[mn].bc(x);
  x.onclick=o;
  x.ac(x.p=E("span"));
 }
};

tp=()=>btp(1);
bt=()=>btp(0);
rt=()=>rlt(1);
lt=()=>rlt(0);

t=function(){
 var x,y,z,w=dd[d.p];
 d.a++;d.a==4&&d.s++;
 
 d.m=d.m==0?1:0;cc.u();
 
 if(d.m==1){
  c={};aa.u();
  x=-1;y=e.length
  while(++x<y)
   z=e[x],
   z.p==d.p&&(
    --z.d<1?(z.t==1&&a[z.x][z.y].sa("x",1),q(z,x),x--):
    z.t==1?(w.j+=2):
    z.t==2?w.f++:0
   );
  
  return;
 }
 
 n(s,c.n);
 x=m(s.length);
 c=s[x];
 c.n=x;
 aa.u();
 
 x.f-=x.p;
 (x.f<0)&&((x.p+=x.f),x.f=0);
 (x.p<1)&&(alert("Player "+d.p+" lost"));
 d.p==1?d.p=2:d.p=1;
 aa.tc=d.p;
 dd.u();
 cc.u();
};


b.oncontextmenu=p;

col=E("section");
col.id="col";
b.ac(col);

x=E("table");
b.ac(x);
a=x;

i=-1;
while(++i<128)
s.push({0:m(3),1:m(3),2:m(3),3:m(3),z:m(3)});
c=s[0];
c.n=0;

aa=E("div");
col.ac(aa);
aa.u=function(){
 var i=-1;
 while(++i<4)
 aa.sa("x"+i,c[i]),
 aa[i]=c[i];
 aa.sa("x",c.z);
};
aa.tc=1;
aa.onclick=r;
aa.u();

bb=E("p");
bb.innerHTML="<h3>Build</h3><button id=bm>Junk Mines</button>"+
"<button id=bp>Plantation</button><button id=bd>Demolish</button>";
col.ac(bb);
I("bm").onclick=()=>bb.u(1);
I("bp").onclick=()=>bb.u(2);
I("bd").onclick=()=>bb.u(3);
bb.u=function(w){
 var x=I("bm"),y=I("bp"),z=I("bd");
 bb.cn=d.m==3?w&&((d.b=w),""):((d.b=0),"hidden");
 x.cn=y.cn=z.cn="";
 d.b==1?(x.cn="active"):
 d.b==2?(y.cn="active"):
 d.b==3?(z.cn="active"):0;
};
bb.u();

mm=E("p");
mm.innerHTML="<h3>Move</h3>How many:<input id=mi type=range "+
"min=1 max=0><output id=mo></output>";
col.ac(mm);
mm.mi=I("mi");
mm.mo=I("mo");
mm.u=function(){
 var x=mm.mi,y=mm.mo,z;
 mm.cn=d.m==2?"":"hidden";
 if(!f){
  x.max=d.n=0;
 }else{
  z=a[f.x][f.y].p;
  x.max=z.cn=="p"+d.p?mn(z.tc):0;
  d.n=mn(x.value)||0;
 }
 y.tc=d.n+" of "+x.max;
};
mm.mi.onchange=mm.u;
mm.u();

cc=E("p");
cc.innerHTML="<button id=cb>Build</button><button id=ce>End turn"+
"</button><button id=cm>Move</button>";
col.ac(cc);
I("ce").onclick=t;
I("cm").onclick=()=>cc.u(2);
I("cb").onclick=()=>cc.u(3);
cc.u=function(z){
 var x=I("cm"),y=I("cb");
 if(z&&d.m!=0)d.m=z;
 x.cn=y.cn="";
 d.m==2?(x.cn="active"):
 d.m==3?(y.cn="active"):0;
 f=0;mm.u();bb.u();
};

dd=E("p");
dd.innerHTML="<h3 class=p1>Player 1</h3>Population: <output id=p1></output><br>"+
"Food: <output id=f1></output><br>Junk: <output id=j1></output>"+
"<h3 class=p2>Player 2</h3>Population: <output id=p2></output><br>"+
"Food: <output id=f2></output><br>Junk: <output id=j2></output>";
col.ac(dd);

x=function(){
 var i=0,j,x=["p","f","j"],l=3,y;
 while(j=-1,++i<3){
  dd[i]={p:2,f:10,j:0};
  while(++j<l) dd[i][x[j]+"n"]=I(x[j]+i);
}};
x();

dd.u=function(){
 var i=0,j,x=["p","f","j"],l=3;
 while(j=-1,++i<3)while(++j<l)
 dd[i][x[j]+"n"].tc=dd[i][x[j]];
};
dd.u();


a[0]=E("tr");
a.ac(a[0]);
x=a[0][0]=E("td");
x.x=0;x.y=0;
a[0].ac(x);
x.onclick=o;
x.prim=1;
x.ac(x.p=E("span"));

b.onkeydown=e=>
e.keyCode==66?cc.u(3)://b
e.keyCode==77?cc.u(2)://m
e.keyCode==78?t()://n
e.keyCode==74?bb.u(1)://j
e.keyCode==75?bb.u(2)://k
e.keyCode==76?bb.u(3)://l
e.keyCode==107?((mm.mi.value=mn(mm.mi.value)+1),mm.u())://+
e.keyCode==109?((mm.mi.value=mn(mm.mi.value)-1),mm.u())://-
0;

</script>
